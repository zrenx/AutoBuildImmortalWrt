name: build-sunxi-cortexa53-23.05.4-ImmpotalWrt

on:
  workflow_dispatch:
    inputs:
      profile:
        type: choice
        description: "请选择路由器型号"
        required: true
        options:
          - friendlyarm_nanopi-r1s-h5
          - xunlong_orangepi-zero-plus
          - friendlyarm_nanopi-neo2
          - xunlong_orangepi-pc2
          - friendlyarm_nanopi-neo-plus2
          - libretech_all-h3-cc-h5
          - pine64_pine64-plus
          - pine64_sopine-baseboard
        default: friendlyarm_nanopi-r1s-h5
      enable_store:
        description: "集成 store 商店"
        required: false
        type: boolean
        default: true
      include_docker:
        description: |
          是否编译 Docker 插件
        required: true
        default: 'no'
        type: choice
        options:
          - 'yes'
          - 'no'
      size:
        description: '请输入要编译固件大小 单位(MB)'
        required: true
        default: '1024'


jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set executable permissions
        run: |
          chmod +x ${{ github.workspace }}/sunxi-cortexa53/build23.sh
      
      - name: Enable Store integration
        run: |
          if [ "${{ github.event.inputs.enable_store }}" == "true" ]; then
            echo 'CUSTOM_PACKAGES="$CUSTOM_PACKAGES luci-app-store"' >> shell/custom-packages.sh
            echo "✅ 已追加 luci-app-store"
          else
            echo "❎ 未启用 luci-app-store"
          fi
      
      - name: Build sunxi-cortexa53 ImmpotalWrt 23.05.4
        run: |
          profiles="${{ github.event.inputs.profile }}"
          include_docker="${{ github.event.inputs.include_docker }}"
          size="${{ github.event.inputs.size }}"
          
          IFS=',' read -r -a profile_array <<< "$profiles"
          
          for profile in "${profile_array[@]}"; do
            echo "Building for profile: $profile"
            
            docker run --rm -i \
              --user root \
              -v "${{ github.workspace }}/bin:/home/build/immortalwrt/bin" \
              -v "${{ github.workspace }}/files/etc/uci-defaults:/home/build/immortalwrt/files/etc/uci-defaults" \
              -v "${{ github.workspace }}/arch/arch.conf:/home/build/immortalwrt/files/etc/opkg/arch.conf" \
              -v "${{ github.workspace }}/shell:/home/build/immortalwrt/shell" \
              -v "${{ github.workspace }}/sunxi-cortexa53/build23.sh:/home/build/immortalwrt/build.sh" \
              -e PROFILE=$profile \
              -e INCLUDE_DOCKER=$include_docker \
              -e ROOTSIZE=$size \
              immortalwrt/imagebuilder:sunxi-cortexa53-openwrt-23.05.4 /bin/bash /home/build/immortalwrt/build.sh
          done

      - name: Create info
        run: |
          if [ "${{ github.event.inputs.include_docker }}" == "yes" ]; then
            extra_content="### 默认带docker"
            echo -e "\n $extra_content" >> ${{ github.workspace }}/sunxi-cortexa53/info.md
          else
            echo -e "NO docker"
          fi
          
      - name: Upload ImmortWrt as release assets
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name: Autobuild-sunxi-cortexa53
          name: ImmortalWrt-sunxi-cortexa53
          body_path: ${{ github.workspace }}/sunxi-cortexa53/info.md
          files: |
            ${{ github.workspace }}/bin/targets/sunxi/cortexa53/*squashfs-sdcard.img.gz 
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
