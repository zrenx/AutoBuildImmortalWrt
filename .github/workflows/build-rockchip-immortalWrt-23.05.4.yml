name: build-rockchip-immortalWrt-23.05.4

on:
  workflow_dispatch:
    inputs:
      profile:
        type: choice
        description: |
          输入 软路由型号 可选值如下：
        required: true
        options:
          - ariaboard_photonicat
          - armsom_sige3
          - ezpro_mrkaio-m68s 
          - firefly_roc-rk3328-cc 
          - firefly_roc-rk3568-pc 
          - friendlyarm_nanopc-t4 
          - friendlyarm_nanopi-r2c 
          - friendlyarm_nanopi-r2c-plus 
          - friendlyarm_nanopi-r2s 
          - friendlyarm_nanopi-r4s 
          - friendlyarm_nanopi-r4s-enterprise 
          - friendlyarm_nanopi-r4se 
          - friendlyarm_nanopi-r5c 
          - friendlyarm_nanopi-r5s 
          - huake_guangmiao-g4c 
          - lunzn_fastrhino-r66s 
          - lunzn_fastrhino-r68s 
          - lyt_t68m 
          - pine64_rockpro64 
          - radxa_rock-pi-4a 
          - radxa_rock-pi-e 
          - xunlong_orangepi-r1-plus 
          - xunlong_orangepi-r1-plus-lts
        default: 'friendlyarm_nanopi-r4s'
      rootfs_partsize:
        description: '设置软件包大小 单位(MB)'
        required: true
        default: '1024'
      enable_store:
        description: "集成 store 商店"
        required: false
        type: boolean
        default: true
      include_docker:
        description: |
          是否编译 Docker 插件
        required: true
        default: 'yes'
        type: choice
        options:
          - 'yes'
          - 'no'
      enable_pppoe:
        description: "是否配置PPPoE拨号信息?"
        required: true
        default: 'no'
        type: choice
        options:
        - 'yes'
        - 'no'
      pppoe_account:
        description: "宽带账号 (若启用PPPoE)"
        required: false
      pppoe_password:
        description: "宽带密码 (若启用PPPoE)"
        required: false

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set executable permissions
        run: chmod +x ${{ github.workspace }}/rockchip/build23.sh

      - name: Validate PPPoE Inputs
        run: |
          if [[ "${{ inputs.enable_pppoe }}" == "yes" ]]; then
            if [[ -z "${{ inputs.pppoe_account }}" || -z "${{ inputs.pppoe_password }}" ]]; then
              echo "Error: PPPoE account and password must be provided when PPPoE is enabled!"
              exit 1
            fi
          fi
      
      - name: Enable Store integration
        run: |
          if [ "${{ github.event.inputs.enable_store }}" == "true" ]; then
            echo 'CUSTOM_PACKAGES="$CUSTOM_PACKAGES luci-app-store"' >> shell/custom-packages.sh
            echo "✅ 已追加 luci-app-store"
          else
            echo "❎ 未启用 luci-app-store"
          fi

      - name: Building Rockchip ImmortalWrt
        run: |
          profiles="${{ github.event.inputs.profile }}"
          include_docker="${{ github.event.inputs.include_docker }}"
          rootfs_partsize="${{ github.event.inputs.rootfs_partsize }}"
          
          IFS=',' read -r -a profile_array <<< "$profiles"
          
          for profile in "${profile_array[@]}"; do
            echo "Building for profile: $profile"
            
            docker run --rm -i \
              --user root \
              -v "${{ github.workspace }}/bin:/home/build/immortalwrt/bin" \
              -v "${{ github.workspace }}/files/etc/uci-defaults:/home/build/immortalwrt/files/etc/uci-defaults" \
              -v "${{ github.workspace }}/arch/arch.conf:/home/build/immortalwrt/files/etc/opkg/arch.conf" \
              -v "${{ github.workspace }}/rockchip/imm.config:/home/build/immortalwrt/.config" \
              -v "${{ github.workspace }}/shell:/home/build/immortalwrt/shell" \
              -v "${{ github.workspace }}/rockchip/build23.sh:/home/build/immortalwrt/build.sh" \
              -e PROFILE=$profile \
              -e INCLUDE_DOCKER=$include_docker \
              -e ROOTFS_PARTSIZE=$rootfs_partsize \
              -e ENABLE_PPPOE=${{ inputs.enable_pppoe }} \
              -e PPPOE_ACCOUNT=${{ inputs.pppoe_account }} \
              -e PPPOE_PASSWORD=${{ inputs.pppoe_password }} \
              immortalwrt/imagebuilder:rockchip-armv8-openwrt-23.05.4 /bin/bash /home/build/immortalwrt/build.sh
          done


      - name: Upload ImmortWrt as release assets
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name: Autobuild-23.05.4
          name: ImmortWrt-Rockchip
          body_path: ${{ github.workspace }}/info.md
          files: |
            ${{ github.workspace }}/bin/targets/rockchip/armv8/*.img.gz
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}