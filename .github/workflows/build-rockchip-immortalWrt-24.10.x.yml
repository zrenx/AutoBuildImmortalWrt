name: build-rockchip-immortalWrt-24.10.x

on:
  workflow_dispatch:
    inputs:
      luci_version:
        description: "ÈÄâÊã©luciÁâàÊú¨"
        required: false
        default: "24.10.3"
        type: choice
        options:
          - 24.10.0
          - 24.10.1
          - 24.10.2
          - 24.10.3
      profile:
        type: choice
        description: |
          ËæìÂÖ• ËΩØË∑ØÁî±ÂûãÂè∑ ÂèØÈÄâÂÄºÂ¶Ç‰∏ãÔºö
        options:
          - ariaboard_photonicat
          - armsom_sige3
          - armsom_sige7
          - cyber_cyber3588-aib
          - ezpro_mrkaio-m68s
          - firefly_roc-rk3328-cc
          - firefly_roc-rk3568-pc
          - friendlyarm_nanopc-t4
          - friendlyarm_nanopc-t6
          - friendlyarm_nanopi-r2c
          - friendlyarm_nanopi-r2c-plus
          - friendlyarm_nanopi-r2s
          - friendlyarm_nanopi-r3s
          - friendlyarm_nanopi-r4s
          - friendlyarm_nanopi-r4se
          - friendlyarm_nanopi-r4s-enterprise
          - friendlyarm_nanopi-r5c
          - friendlyarm_nanopi-r5s
          - friendlyarm_nanopi-r6c
          - friendlyarm_nanopi-r6s
          - huake_guangmiao-g4c
          - lunzn_fastrhino-r66s
          - lunzn_fastrhino-r68s
          - lyt_t68m
          - pine64_rock64
          - pine64_rockpro64
          - radxa_cm3_io
          - radxa_e25
          - radxa_rock-3a
          - radxa_rock-3b
          - radxa_rock-3c
          - radxa_rock-5a
          - radxa_rock-5b
          - radxa_rock-pi-4a
          - radxa_rock-pi-e
          - radxa_rock-pi-s
          - radxa_zero-3e
          - radxa_zero-3w
          - sinovoip_bpi-r2-pro
          - xunlong_orangepi-5
          - xunlong_orangepi-5-plus
          - xunlong_orangepi-r1-plus
          - xunlong_orangepi-r1-plus-lts
        required: true
        default: 'friendlyarm_nanopi-r3s'
      custom_router_ip:
        description: "ËØ∑ËÆæÁΩÆËΩØË∑ØÁî±ÁöÑÁÆ°ÁêÜÂú∞ÂùÄ(Ê≥®ÊÑè‰ªÖÂØπÂ§öÁΩëÂè£ËΩØË∑ØÁî±ÊúâÊïà) Ê†ºÂºè:192.168.x.1 Êàñ 10.x.x.1"
        required: true
        default: "192.168.100.1"
      rootfs_partsize:
        description: 'ËÆæÁΩÆËΩØ‰ª∂ÂåÖÂ§ßÂ∞è Âçï‰Ωç(MB)'
        required: true
        default: '1024'
      enable_store:
        description: "ÈõÜÊàê store ÂïÜÂ∫ó"
        required: false
        type: boolean
        default: true
      include_docker:
        description: |
          ÊòØÂê¶ÁºñËØë Docker Êèí‰ª∂
        required: true
        default: 'yes'
        type: choice
        options:
          - 'yes'
          - 'no'
      enable_pppoe:
        description: "ÊòØÂê¶ÈÖçÁΩÆPPPoEÊã®Âè∑‰ø°ÊÅØ?"
        required: true
        default: 'no'
        type: choice
        options:
        - 'yes'
        - 'no'
      pppoe_account:
        description: "ÂÆΩÂ∏¶Ë¥¶Âè∑ (Ëã•ÂêØÁî®PPPoE)"
        required: false
      pppoe_password:
        description: "ÂÆΩÂ∏¶ÂØÜÁ†Å (Ëã•ÂêØÁî®PPPoE)"
        required: false

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set executable permissions
        run: chmod +x ${{ github.workspace }}/rockchip/build24.sh
      
      - name: Save Custom Router IP into OpenWrt files
        run: |
          mkdir -p "${{ github.workspace }}/custom"
          echo "${{ github.event.inputs.custom_router_ip }}" > "${{ github.workspace }}/custom/custom_router_ip.txt"
          echo "ÊÇ®ËÆæÁΩÆÁöÑRockchipËΩØË∑ØÁî±ÁÆ°ÁêÜÂú∞ÂùÄÊòØ:${{ github.event.inputs.custom_router_ip }}"
          # ÂêéÁª≠Ê≠•È™§‰ºöÂ∞ÜËØ•Êñá‰ª∂Êò†Â∞ÑÂà∞Ë∑ØÁî±Âô®/etc/config/custom_router_ip.txt ‰ª•‰æøÁî®‰∫éÂºÄÊú∫ËÑöÊú¨99-custom.shËØªÂèñÁî®Êà∑ËÆæÁΩÆÁöÑip
      
      - name: Validate PPPoE Inputs
        run: |
          if [[ "${{ inputs.enable_pppoe }}" == "yes" ]]; then
            if [[ -z "${{ inputs.pppoe_account }}" || -z "${{ inputs.pppoe_password }}" ]]; then
              echo "Error: PPPoE account and password must be provided when PPPoE is enabled!"
              exit 1
            fi
          fi
      
      - name: Enable Store integration
        run: |
          if [ "${{ github.event.inputs.enable_store }}" == "true" ]; then
            echo 'CUSTOM_PACKAGES="$CUSTOM_PACKAGES luci-app-store"' >> shell/custom-packages.sh
            echo "‚úÖ Â∑≤ËøΩÂä† luci-app-store"
          else
            echo "‚ùé Êú™ÂêØÁî® luci-app-store"
          fi
          

      - name: Building Rockchip ImmortalWrt
        run: |
          profiles="${{ github.event.inputs.profile }}"
          include_docker="${{ github.event.inputs.include_docker }}"
          rootfs_partsize="${{ github.event.inputs.rootfs_partsize }}"
          luci_version="${{ github.event.inputs.luci_version }}"
          
          IFS=',' read -r -a profile_array <<< "$profiles"
          
          for profile in "${profile_array[@]}"; do
            echo "Building for profile: $profile"
            
            docker run --rm -i \
              --user root \
              -v "${{ github.workspace }}/bin:/home/build/immortalwrt/bin" \
              -v "${{ github.workspace }}/files/etc/uci-defaults:/home/build/immortalwrt/files/etc/uci-defaults" \
              -v "${{ github.workspace }}/arch/arch.conf:/home/build/immortalwrt/files/etc/opkg/arch.conf" \
              -v "${{ github.workspace }}/rockchip/imm.config:/home/build/immortalwrt/.config" \
              -v "${{ github.workspace }}/shell:/home/build/immortalwrt/shell" \
              -v "${{ github.workspace }}/rockchip/build24.sh:/home/build/immortalwrt/build.sh" \
              -e PROFILE=$profile \
              -e INCLUDE_DOCKER=$include_docker \
              -e ROOTFS_PARTSIZE=$rootfs_partsize \
              -e ENABLE_PPPOE=${{ inputs.enable_pppoe }} \
              -e PPPOE_ACCOUNT=${{ inputs.pppoe_account }} \
              -e PPPOE_PASSWORD=${{ inputs.pppoe_password }} \
              immortalwrt/imagebuilder:rockchip-armv8-openwrt-${luci_version} /bin/bash /home/build/immortalwrt/build.sh
          done
    
      - name: Create info
        run: |
          cat > ${{ github.workspace }}/router-info.md <<EOF
          ## üì° Ë∑ØÁî±Âô®ÂêéÂè∞‰ø°ÊÅØ

          - ‚ú≥Ô∏è **ËΩØË∑ØÁî±ÂûãÂè∑**: ${{ github.event.inputs.profile }}
          - üè† **ÂêéÂè∞Âú∞ÂùÄ**: ${{ github.event.inputs.custom_router_ip }}
          - üë§ **Áî®Êà∑Âêç**: root
          - üîë **ÂØÜÁ†Å**: Êó†
          EOF

          if [ "${{ github.event.inputs.include_docker }}" == "yes" ]; then
            extra_content="#### ÈªòËÆ§Â∏¶docker"
            echo -e "\n$extra_content" >> ${{ github.workspace }}/router-info.md
          else
            echo -e "\n#### ‰∏çÂ∏¶docker" >> ${{ github.workspace }}/router-info.md
          fi

      - name: Upload ImmortWrt as release assets
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name: Autobuild
          name: ImmortWrt-Rockchip
          body_path: ${{ github.workspace }}/router-info.md
          files: |
            ${{ github.workspace }}/bin/targets/rockchip/armv8/*.img.gz
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
